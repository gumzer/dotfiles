#####################
## common settings ##
#####################

export GIT_EDITOR=vim

# classic version
#export EDITOR=/usr/bin/emacsclient
#export ALTERNATE_EDITOR=/usr/bin/emacs
#export VIEWER=$EDITOR

# own version
#export EDITOR=/home/jabba/Dropbox/home/jabba/bin/EDITOR
#export ALTERNATE_EDITOR=/home/jabba/Dropbox/home/jabba/bin/ALTERNATE_EDITOR
#export VIEWER=$EDITOR

##################################
# BEGIN: emacs/vim/nvim settings #
##################################
export EMACS=/home/jabba/Dropbox/home/jabba/bin/emacs_try_client_first
alias e=$EMACS
alias em=$EMACS

export VI=/home/jabba/Dropbox/home/jabba/bin/nvim_try_remote_first.py
#export NVIM_LISTEN_ADDRESS=/tmp/nvimsocket

if [ -f $HOME/SLOW ];
then
    # if you have a slow machine
    export EDITOR=/usr/bin/nvim
else
    export EDITOR=$VI
fi

export VIEWER=$EDITOR
alias vi=$EDITOR
alias vih=/usr/bin/nvim    # edit with vi here, i.e. no remote

export TERM=xterm-256color
################################
# END: emacs/vim/nvim settings #
################################

# colored less using pygmentize
export LESS='-R'

#export JAVA_HOME=/opt/java
#export JDK_HOME=$JAVA_HOME
#export PATH=$PATH:$JAVA_HOME/bin

SPIDEROAK="$HOME/SpiderOak Hive"
MY_BIN="$HOME/bin"
MY_BIN=$MY_BIN:"$HOME/bin.python"
MY_BIN=$MY_BIN:"$HOME/bin.secret"
export PATH=$PATH:$MY_BIN

export GOPATH=$HOME/Dropbox/go
export GO=$GOPATH/src/github.com/jabbalaci
export GOLIB=$GOPATH/src/github.com/jabbalaci/jabbagolib

PATH=$PATH:$GOPATH/bin
export PATH

# add wpython.py
#PATH=$PATH:$HOME/Dropbox/python/Wpython
#export PATH

#function msdos_pwd
#{
#    local dir="`pwd`"
#    dir=${dir/$HOME/'~'}
#
#    echo $dir | tr '/' '\\'
#}
#
#export PS1='C:`msdos_pwd`> '

# finance project, HTML to PDF
#PATH=$PATH:/opt/wkhtmltopdf
#export PATH

export PYTHONPATH=$HOME/python/lib/jabbapylib2

PYPY=/opt/pypy/bin
PATH=$PATH:$PYPY
export PATH

#export PYTHONSTARTUP=$HOME/.pythonstartup.py

# Android's Video directory
export A='/media/jabba/FC1A-45A6/Video'
export B='/media/jabba/GT70/Movies'

PATH=$PATH:/opt/chromedriver
export PATH

# added by Anaconda 1.7.0 installer
#export PATH="/opt/anaconda/bin:$PATH"

# deactivate that the screen goes blank in 10 minutes
# a rukkola's HappBot-hoz kell
#xset s 0 0

alias md='mkdir'
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
alias d='ls -al'
#alias mc='. /usr/share/mc/bin/mc-wrapper.sh'
# START: mc-wrapper
if [ -f /usr/local/libexec/mc/mc-wrapper.sh ]
then
    alias mc=". /usr/local/libexec/mc/mc-wrapper.sh"
else
    if [ -f /usr/lib/mc/mc-wrapper.sh ]
    then
        alias mc=". /usr/lib/mc/mc-wrapper.sh"
    else
        echo "error: mc-wrapper.sh not found"
    fi
fi
# END: mc-wrapper
alias run='chmod u+x'
alias cpc='CWD_LAC=`pwd`'
alias cdc='cd $CWD_LAC'
alias rid='chmod 644'
alias ridd='chmod 755'
alias gq='gqview &'
alias tailf='tail -f'
alias cls='clear'
alias nh='nautilus . 2>/dev/null'
alias gt='gthumb &'
alias p='python'
alias pudb='python -m pudb'
alias p2='python2'
alias p3='python3'
alias bpy2='bpython2'
alias bpy3='bpython3'
# alias ipy='ipython'
# alias ipy3='ipython3'
# alias ipynb='ipython notebook'
alias th='echo "cls; cd `pwd`"'
alias kr='krusader &'
alias kill9='kill -9'
alias sshow_r='feh -zsZFD 5 .'
alias sshow_n='feh -FD 5 .'
alias rukkola='okular $HOME/Dropbox/books/_postai_dijszabas/Tarifatabla_20120801.pdf 2>/dev/null &'
alias tm='tmux'
alias t='cls; rlwrap task'
alias killvlc='kill -9 `ps ux | grep vlc | grep -v grep | tr -s " " | cut -d" " -f2`'
alias killmplayer='ps ux | grep mplayer | grep -v grep | tr -s " " | cut -d" " -f2 | xargs kill -9'
alias k='konsole 2>/dev/null &'
alias Q='tail -f $HOME/bin/copy_queue/daemon.log'
alias sagi='sudo apt install'
alias pcat="pygmentize -f terminal256 -O style=native -g"
alias beep="mplayer -ao alsa $HOME/bin/alert.wav &>/dev/null"
alias pip_pypy='/opt/pypy/bin/pip'
alias ppwd='/bin/pwd'
alias top10dirs='du -hsx * | sort -rh | head -10'
alias top10files='find . -type f -print0 | du -h --files0-from=- | sort -hr | head -n 10'
alias ad='avidemux'
alias mplayer='mplayer -vo x11'
alias mozilla='okular $HOME/mozilla.pdf 2>/dev/null &'
alias t='clear; task'
alias pip_pypy='/opt/pypy/bin/pip'
# func_workon()
# {
# if [[ -z "$1" ]]
# then
#     echo "Usage: workon <venv>"
# else
#     . $1/bin/activate
# fi
# }
# alias workon=func_workon
mkdir_go()
{
if [[ -z "$1" ]]
then
    echo "Usage: mdgo <dir>"
else
    mkdir $1; cd $1
fi
}
alias mdgo=mkdir_go

# on_function()
# {
#     a=`ppwd`
#     f=${a##*/}
#     workon $f
#     if [ $? -ne 0 ]; then
#         bak=`ppwd`
#         a=`dirname $bak`
#         f=${a##*/}
#         workon $f
#         cd $bak
#     fi
# }
# alias on=on_function
# alias off='deactivate'
#alias off='exit'
alias ydl='youtube-dl'
alias black='gnome-screensaver-command -a'
alias r='ranger'
alias scala='scala -Dscala.color'

alias ..="cd .."
alias ...="cd ..; cd .."
alias ....="cd ..; cd ..; cd .."
alias .....="cd ..; cd ..; cd ..; cd .."
alias ......="cd ..; cd ..; cd ..; cd ..; cd .."

# https://github.com/nvbn/thefuck
#alias fuck='eval $(thefuck $(fc -ln -1)); history -r'
#export THEFUCK_REQUIRE_CONFIRMATION='true'

# .xsession-errors can grow huge... remove it
if [ ! -h $HOME/.xsession-errors ]
then
    /bin/rm $HOME/.xsession-errors 2>/dev/null
    ln -s /dev/null $HOME/.xsession-errors 2>/dev/null
fi

if [ ! -h $HOME/.xsession-errors.old ]
then
    /bin/rm $HOME/.xsession-errors.old 2>/dev/null
    ln -s /dev/null $HOME/.xsession-errors.old 2>/dev/null
fi

### Added by the Heroku Toolbelt
export PATH=$PATH:/usr/local/heroku/bin

# START: virtualenvwrapper (works with Ubuntu and Manjaro)
#export WORKON_HOME=$HOME/.virtualenvs
#export PROJECT_HOME=$HOME/webapps
#export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
#if [ -f /usr/local/bin/virtualenv ]
#then
#    export VIRTUALENVWRAPPER_VIRTUALENV=/usr/local/bin/virtualenv
#else
#    if [ -f /usr/bin/virtualenv ]
#    then
#        export VIRTUALENVWRAPPER_VIRTUALENV=/usr/bin/virtualenv
#    else
#        echo "error: virtualenv not found"
#    fi
#fi
##
#if [ -f /usr/local/bin/virtualenvwrapper.sh ]
#then
#    source /usr/local/bin/virtualenvwrapper.sh
#else
#    if [ -f /usr/bin/virtualenvwrapper.sh ]
#    then
#        source /usr/bin/virtualenvwrapper.sh
#    else
#        echo "error: virtualenvwrapper.sh not found"
#    fi
#fi
# END: virtualenvwrapper

# autoenv
# https://github.com/kennethreitz/autoenv
# installation:
# git clone git://github.com/kennethreitz/autoenv.git ~/.autoenv
#source ~/.autoenv/activate.sh

# fortune | cowthink

# colorize man pages
# http://unix.stackexchange.com/questions/119/colors-in-man-pages
export PAGER=most

# shopt settings (normalize Ubuntu and Manjaro)
shopt -s cdspell
shopt -s dotglob
shopt -s hostcomplete
shopt -s nocaseglob
# required for "source .venv":
shopt -u sourcepath

# Scala
#export PATH=$PATH:/opt/scala/bin

# https://gist.github.com/insin/1425703
# when using the terminal of neovim, use a short prompt
# if we are in neovim's terminal, then (and only then) MYVIMRC is set
if [ -n "$MYVIMRC" ]
then
    source ~/.bash_prompt_basic
else
    # source ~/.bash_prompt_basic
    source ~/.bash_prompt
fi

# https://github.com/cask/cask
#export PATH=$PATH:$HOME/.cask/bin

# http://linuxgazette.net/109/misc/marinov/acd_func.html
source ~/bin/acd_func.sh
alias ll="cd --"

# autojump
# http://www.thinkingmedia.ca/2014/10/how-to-install-autojump-on-ubuntu-14/
source /usr/share/autojump/autojump.bash
alias jj="j --stat"

# fish shell
alias f='fish'

# brackets text editor
# alias br="brackets &>/dev/null &"

# source my virtualenv functions and aliases
# https://github.com/jabbalaci/virtualenv-tools
source ~/Dropbox/home/virtualenv-tools/virtualenv.sh

# using Anaconda 3
alias ipy='/opt/anaconda3/bin/ipython'
alias ipynb='/opt/anaconda3/bin/jupyter notebook --notebook-dir ~/Dropbox/ipython_notebooks'

# Opens the github page for the current git repository in your browser
# git@github.com:jasonneylon/dotfiles.git
# https://github.com/jasonneylon/dotfiles/
function gh() {
  giturl=$(git config --get remote.origin.url)
  if [ "$giturl" == "" ]
    then
     echo "Not a git repository or no remote.origin.url set"
     exit 1;
  fi

  giturl=${giturl/git\@github\.com\:/https://github.com/}
  giturl=${giturl/\.git/\/tree/}
  branch="$(git symbolic-ref HEAD 2>/dev/null)" ||
  branch="(unnamed branch)"     # detached HEAD
  branch=${branch##refs/heads/}
  giturl=${giturl}${branch}
  echo "#" $giturl
  xdg-open $giturl
}

alias ssh='ssh -o ServerAliveInterval=60'

# screen nedds this to work correctly
# export TERM=xterm

# kotlin
export PATH=$PATH:/opt/kotlinc/bin

# SDKMAN
# https://github.com/sdkman/sdkman-cli
# installation:
# $ curl -s api.sdkman.io | bash
#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

# NeoVim
alias nvi='nvim'

# if PhantomJS crashes
export QT_QPA_PLATFORM=''

# https://github.com/junegunn/fzf
# install:
# $ git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
# $ ~/.fzf/install
[ -f ~/.fzf.bash ] && source ~/.fzf.bash
